###################################################################################
###################################################################################
###################################################################################
##########                        Code  Structure                  ################

##########                        1) Library Import                ################
##########                        2) Flask Configurations          ################
##########                        3) Database                      ################
##########                        4) Home Page                     ################
##########                        5) Sponser                       ################
##########                        6) Influencer                    ################
##########                        7) Admin                         ################
###################################################################################
###################################################################################
###################################################################################


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#

###################################################################################
###################################################################################
###################################################################################
##########                         1) Library Import               ################
###################################################################################
###################################################################################
###################################################################################

import os
from flask import Flask, render_template, request, redirect, url_for, flash,jsonify, session
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime, timedelta
from sqlalchemy import func
from werkzeug.utils import secure_filename
from time import sleep
from flask import redirect, abort
from sqlalchemy.orm import relationship
from flask import flash
from sqlalchemy import desc
from flask_security import UserMixin,RoleMixin,Security
from flask_security.models import fsqla_v3 as fsq
from flask_security.utils import hash_password
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#

###################################################################################
###################################################################################
###################################################################################
##########                        2) Flask Configurations          ################
###################################################################################
###################################################################################
###################################################################################

app = Flask(__name__)
security = Security()

current_dir = os.path.abspath(os.path.dirname(__file__))
app = Flask(__name__)
app.config['SECRET_KEY'] = 'your_secret_key_here'
app.config['SQLALCHEMY_DATABASE_URI'] = "sqlite:///" + os.path.join(current_dir, "oeanalytics.sqlite3") 

# In your Flask app configuration, add the following settings
app.config['SECURITY_PASSWORD_HASH'] = 'bcrypt'
app.config['SECURITY_PASSWORD_SALT'] = 'salty-password'  # Replace with a secure random value
app.config['SECURITY_PASSWORD_SINGLE_HASH'] = {'bcrypt'}  # Define the hashing method to use
app.config['SECURITY_TOKEN_AUTHENTICATION_HEADER'] = 'Authentication-Token'


db = SQLAlchemy()
db.init_app(app)
app.app_context().push()


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#

###################################################################################
###################################################################################
###################################################################################
##########                        3) Database                      ################
###################################################################################
###################################################################################
###################################################################################

fsq.FsModels.set_db_info(db)

# Admin Table
class Admin(db.Model):
    __tablename__ = 'admin'
    
    user_id = db.Column(db.String, primary_key=True)
    description = db.Column(db.String, nullable=False)

# Category Table
class Category(db.Model):
    __tablename__ = 'category'
    
    category = db.Column(db.String, primary_key=True, unique=True)
    description = db.Column(db.String, nullable=False)
    date = db.Column(db.String, nullable=False)

# Influencer Table
class Influencer(db.Model):
    __tablename__ = 'influencer'
    
    username = db.Column(db.String, primary_key=True, unique=True)
    address = db.Column(db.String)
    contact = db.Column(db.Numeric)
    district = db.Column(db.String)
    state = db.Column(db.String)
    pincode = db.Column(db.Numeric)
    first_name = db.Column(db.String)
    last_name = db.Column(db.String)
    instagram_id = db.Column(db.String)
    linkedin_id = db.Column(db.String)
    facebook_id = db.Column(db.String)
    x_id = db.Column(db.String)
    category = db.Column(db.String, db.ForeignKey('category.category'))
    insta_f = db.Column(db.Integer)
    linkedin_f = db.Column(db.Integer)
    facebook_f = db.Column(db.Integer)
    x_f = db.Column(db.Integer)
    bio = db.Column(db.String)
    flag = db.Column(db.Integer)
    wallet = db.Column(db.Integer)
    complete = db.Column(db.Integer)

# Role Table
class Role(db.Model):
    __tablename__ = 'role'
    
    id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    name = db.Column(db.String(80), unique=True, nullable=False)
    description = db.Column(db.String(255))

# Sponsor Table
class Sponsor(db.Model):
    __tablename__ = 'sponsor'
    
    username = db.Column(db.String, primary_key=True, unique=True)
    address = db.Column(db.String)
    contact = db.Column(db.String)
    district = db.Column(db.String)
    state = db.Column(db.String)
    pincode = db.Column(db.Integer)
    first_name = db.Column(db.String)
    last_name = db.Column(db.String)
    company_name = db.Column(db.String)
    industry = db.Column(db.String)
    positions = db.Column(db.String)
    bio = db.Column(db.String)
    flag = db.Column(db.Integer)
    wallet = db.Column(db.Integer)
    complete = db.Column(db.Integer)
    category = db.Column(db.String, db.ForeignKey('category.category'))

# User Table
class User(db.Model):
    __tablename__ = 'user'
    
    id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    email = db.Column(db.String(255), unique=True, nullable=False)
    password = db.Column(db.String(255))
    active = db.Column(db.Boolean)
    fs_uniquifier = db.Column(db.String(65), unique=True, nullable=False)
    roles = db.relationship('Role', secondary='user_roles')

# UserRoles Association Table
class UserRoles(db.Model):
    __tablename__ = 'user_roles'
    
    id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id', ondelete='CASCADE'), nullable=False)
    role_id = db.Column(db.Integer, db.ForeignKey('role.id', ondelete='CASCADE'), nullable=False)

    
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#

###################################################################################
###################################################################################
###################################################################################
##########                        4) Home Page                     ################
###################################################################################
###################################################################################
###################################################################################

@app.route('/', methods=['GET', 'POST'])
def index():
    return redirect(url_for('oeanalytics'))

# 4.0.2 Redirecting App
@app.route('/oeanalytics', methods=['GET', 'POST'])
def oeanalytics():
    return render_template('index.html')

###################################################################################
##########                        4.1) LogIN                       ################
###################################################################################


###################################################################################
##########                        4.2) SignUp                      ################
###################################################################################



#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#

###################################################################################
###################################################################################
###################################################################################
##########                        5) Sponser                       ################
###################################################################################
###################################################################################
###################################################################################


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#

###################################################################################
###################################################################################
###################################################################################
##########                        6) Influencer                    ################
###################################################################################
###################################################################################
###################################################################################


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#

###################################################################################
###################################################################################
###################################################################################
##########                        7) Admin                         ################
###################################################################################
###################################################################################
###################################################################################


#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#

###################################################################################
###################################################################################
###################################################################################
##########                         1) Library Import               ################
###################################################################################
###################################################################################
###################################################################################

if __name__ == '__main__':
    with app.app_context():
        db.create_all()
    app.run(debug=True)

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>End<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<#
